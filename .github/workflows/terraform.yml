name: Terraform CI/CD

on:
  push:
    branches: [terraform-deploy]
  pull_request: 
    branches: [terraform-deploy]
  workflow_dispatch:    # <-- Add this new trigger
    inputs:
      destroy:
        description: 'Type "confirm" to destroy resources'
        type: string
        required: true

env:
  STORAGE_ACCOUNT_NAME: "tfstate${{ vars.UNIQUE_SUFFIX }}"
  RESOURCE_GROUP: "tfstate-rg"
  CONTAINER_NAME: "tfstate"

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        working-directory: ./terraform
    permissions:
      id-token: write
      contents: read

    steps:
    - uses: actions/checkout@v4

    - name: Azure Login (OIDC)
      uses: azure/login@v1
      with:
        client-id: ${{ vars.AZURE_CLIENT_ID }}
        tenant-id: ${{ vars.AZURE_TENANT_ID }}
        subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}

    - name: Ensure Storage Account Exists
      run: |
        # Generate truly unique name
        UNIQUE_NAME="tfstate$(date +%s | sha256sum | head -c 8)"
        
        # Check/Create storage account
        if ! az storage account show \
          --name $UNIQUE_NAME \
          --resource-group tfstate-rg &>/dev/null; then
          
          echo "Creating storage account $UNIQUE_NAME"
          az storage account create \
            --name $UNIQUE_NAME \
            --resource-group tfstate-rg \
            --sku Standard_LRS
        else
          echo "Using existing storage account $UNIQUE_NAME"
        fi

        # Create container
        az storage container create \
          --name tfstate \
          --account-name $UNIQUE_NAME \
          --auth-mode login || echo "Container already exists"

        # Set output for Terraform init
        echo "STORAGE_ACCOUNT_NAME=$UNIQUE_NAME" >> $GITHUB_ENV

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="resource_group_name=tfstate-rg" \
          -backend-config="storage_account_name=${{ env.STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=tfstate"

    - name: Terraform Apply
      env:
        TF_VAR_environment: prod  # <-- ONLY ADD THIS LINE
      run: terraform apply -auto-approve -input=false
      
      destroy:
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.destroy == 'confirm'
      needs: terraform  # Wait for main job to complete
      runs-on: ubuntu-latest
      environment: production
      steps:
        - uses: actions/checkout@v4
        - uses: azure/login@v1
          with:
            client-id: ${{ vars.AZURE_CLIENT_ID }}
            tenant-id: ${{ vars.AZURE_TENANT_ID }}
            subscription-id: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        - uses: hashicorp/setup-terraform@v3

        - name: Destroy Infrastructure
          run: |
            terraform init -reconfigure
            terraform destroy -auto-approve -input=false

            # Optional: Delete state storage
            az storage account delete \
              --name ${{ env.STORAGE_ACCOUNT_NAME }} \
              --resource-group tfstate-rg \
              --yes || echo "Storage account already deleted"
